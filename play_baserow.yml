- name: Basic setup of baserow on phenotips and longer
  hosts:
    - longer
    - phenotips
  roles:
    - baserow
    
- name: Setup baserow and exchange utilies
  hosts:
    - phenotips
  roles:
    - deploy
    - wmg_read_only
    - wmg_baserow_export
  tasks:
    - name: Ensure cronjobs repository exists
      ansible.builtin.git:
        # repo: https://{{github_user}}:{{github_token}}@github.com/xiamaz/cads_data_exchange.git
        repo: https://github.com/KuechlerO/cads_data_exchange
        dest: "{{ deploy_root }}/cads_data_exchange"
    - name: Place secrets configuration
      template:
        dest: "{{ deploy_root }}/cads_data_exchange/.secrets.toml"
        src: "templates/cads_data_exchange_secrets.toml"
        mode: 400
    - name: Place baserow token
      copy:
        dest: "{{ deploy_root }}/cads_data_exchange/.baserow_token"
        content: "{{ baserow_token }}"
    - name: Place Backup password
      copy:
        dest: "{{ deploy_root }}/cads_data_exchange/.backup_password"
        content: "{{ backup_password }}"
    - name: Ensure dependencies are installed
      become: true
      apt:
        name: mdbtools
        state: latest
    - name: Ensure library is installed
      args:
        chdir: "{{ deploy_root }}/cads_data_exchange"
      shell: |
        micromamba run -n cads_data_exchange pip install -e .
    - name: Create frequent data exchange cronjob
      cron:
        name: Sync terminland
        user: "{{ control_user }}"
        minute: "3-59/5"
        job: "{{ deploy_root }}/cads_data_exchange/cron_frequent.sh"
    - name: Create tri-daily data exchange cronjob
      cron:
        name: Sync baserow
        user: "{{ control_user }}"
        minute: "15"
        hour: "12,17,5"
        job: "{{ deploy_root }}/cads_data_exchange/cron.sh"

    - name: Create daily docker backup cronjob
      cron:
        name: Backup baserow container
        user: "{{ control_user }}"
        minute: "0"
        hour: "0"
        job: "{{ deploy_root }}/cads_data_exchange/run_baserow_backup.sh"
